apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  namespace: kube-system
  labels:
    k8s-app: logstash
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    # all input will come from filebeat, no local logs
    input {
      beats {
        port => 5044
      }
    }

    filter {
      if [kubernetes][namespace] != "siglife-cloud" {
        drop { }
      }

      #If log line contains tab character followed by 'at' then we will tag that entry as stacktrace
      if [message] =~ "\tat" {
        grok {
          match => ["message", "^(\tat)"]
          add_tag => ["stacktrace"]
        }
      }

      #Grokking Spring Boot's default log format
      grok {
        match => [ "message",
                  "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level} %{NUMBER:pid} --- \[(?<thread>\s*[-_A-Za-z0-9]+)\] (?<class>[A-Za-z0-9#_\.]+)\s*:\s+(?<logmessage>.*)",
                  "message",
                  "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
                ]
      }

      #Parsing out timestamps which are in timestamp field thanks to previous grok section
      date {
        match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
        timezone => "Asia/Shanghai"
      }
    }

    output {
      # Print each event to stdout, useful for debugging. Should be commented out in production.
      # Enabling 'rubydebug' codec on the stdout output will make logstash
      # pretty-print the entire event as something similar to a JSON representation.
      stdout {
        codec => rubydebug
      }

      elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        index => "logstash-%{+YYYY.MM.dd}"
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 1
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:7.3.2
        ports:
        - containerPort: 5044
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/logstash/config
          - name: logstash-pipeline-volume
            mountPath: /usr/share/logstash/pipeline
      volumes:
      - name: config-volume
        configMap:
          name: logstash-config
          items:
            - key: logstash.yml
              path: logstash.yml
      - name: logstash-pipeline-volume
        configMap:
          name: logstash-config
          items:
            - key: logstash.conf
              path: logstash.conf
---
kind: Service
apiVersion: v1
metadata:
  name: logstash
  namespace: kube-system
  labels:
    k8s-app: logstash
spec:
  selector:
    app: logstash
  ports:
  - protocol: TCP
    port: 5044
    targetPort: 5044
  type: ClusterIP

